{
    "available" : "atom\ndiscord-canary\ndiscord-ptb\ndiscord-stable\ndiscord-toolbox\nfirefox-beta\nfirefox-dev\nfirefox-nightly\nfirefox\ngpgpassman\nkaku\nkpassman\nnvim\nopenrct2\nopenttd\nrambox\nspm\ntodo\nvscode\nwavebox\nxdgfetch\nyad-mpv\nyad-twitch-streamlink\nyadshot",
    "atom": {
        "instdir": "/opt/atom",
        "download_source": "GITHUB",
        "taruri": "https://github.com/atom/atom/releases",
        "apiuri": "https://api.github.com/repos/atom/atom/releases",
        "desktop_file_path": "DOWNLOAD",
        "icon_file_path": "/opt/atom/atom.png",
        "executable_file_path": "/opt/atom/atom",
        "bin_path": "/usr/local/bin/atom",
        "config_path": "$HOME/.config/atom",
        "description": "The hackable text editor",
        "dependencies": "apm libxkbfile ctags (optional - symbol indexing support) git (optional - Git and GitHub integration)"
    },
    "discord-canary": {
        "instdir": "/opt/discord-canary",
        "download_source": "DIRECT",
        "taruri": "https://discordapp.com/api/download/canary?platform=linux&format=tar.gz",
        "apiuri": "",
        "desktop_file_path": "/opt/discord-canary/discord-canary.desktop",
        "icon_file_path": "/opt/discord-canary/discord.png",
        "executable_file_path": "/opt/discord-canary/DiscordCanary",
        "bin_path": "/usr/local/bin/discord-canary",
        "config_path": "$HOME/.config/discordcanary",
        "description": "All-in-one voice and text chat for gamers that's free, secure, and works on both your desktop and phone.",
        "dependencies": "alsa-lib gconf glibc gtk2 libc++ libnotify libxss nspr nss libpulse (optional – for pulseaudio support) noto-fonts-emoji (optional – Google font for emoji support.) ttf-symbola (optional – font for emoji support.)"
    },
    "discord-ptb": {
        "instdir": "/opt/discord-ptb",
        "download_source": "DIRECT",
        "taruri": "https://discordapp.com/api/download/ptb?platform=linux&format=tar.gz",
        "apiuri": "",
        "desktop_file_path": "/opt/discord-ptb/discord-ptb.desktop",
        "icon_file_path": "/opt/discord-ptb/discord.png",
        "executable_file_path": "/opt/discord-ptb/DiscordPTB",
        "bin_path": "/usr/local/bin/discord-ptb",
        "config_path": "$HOME/.config/discordptb",
        "description": "All-in-one voice and text chat for gamers that's free, secure, and works on both your desktop and phone.",
        "dependencies": "alsa-lib gconf glibc gtk2 libc++ libnotify libxss nspr nss libpulse (optional – for pulseaudio support) noto-fonts-emoji (optional – Google font for emoji support.) ttf-symbola (optional – font for emoji support.)"
    },
    "discord-stable": {
        "instdir": "/opt/discord-stable",
        "download_source": "DIRECT",
        "taruri": "https://discordapp.com/api/download?platform=linux&format=tar.gz",
        "apiuri": "",
        "desktop_file_path": "/opt/discord/discord.desktop",
        "icon_file_path": "/opt/discord/discord.png",
        "executable_file_path": "/opt/discord/Discord",
        "bin_path": "/usr/local/bin/discord-stable",
        "config_path": "$HOME/.config/discord",
        "description": "All-in-one voice and text chat for gamers that's free, secure, and works on both your desktop and phone.",
        "dependencies": "alsa-lib gconf glibc gtk2 libc++ libnotify libxss nspr nss libpulse (optional – for pulseaudio support) noto-fonts-emoji (optional – Google font for emoji support.) ttf-symbola (optional – font for emoji support.)"
    },
    "discord-toolbox": {
        "instdir": "/opt/discord-toolbox",
        "download_source": "GITHUB",
        "taruri": "https://github.com/simoniz0r/DiscordToolbox/releases",
        "apiuri": "https://api.github.com/repos/simoniz0r/DiscordToolbox/releases",
        "desktop_file_path": "NONE",
        "icon_file_path": "NONE",
        "executable_file_path": "/opt/discord-toolbox/DiscordToolbox",
        "bin_path": "/usr/local/bin/discord-toolbox",
        "config_path": "$HOME/.config/DiscordToolbox",
        "description": "A bash script that installs mods for Discord. Mods that can be installed are BeautifulDiscord, mydiscord, and BetterDiscord.",
        "dependencies": "coreutils wget dialog (optional - for discord-toolbox GUI) nodejs (optional - required for BetterDiscord) npm (optional - required for BetterDiscord) python3 (optional - required for BeautifulDiscord and mydiscord) python3-pip (optional - required for BeautifulDiscord and mydiscord)"
    },
    "firefox-beta": {
        "instdir": "/opt/firefox-beta",
        "download_source": "DIRECT",
        "taruri": "https://download.mozilla.org/?product=firefox-55.0b13-SSL&os=linux64&lang=en-US",
        "apiuri": "",
        "desktop_file_path": "DOWNLOAD",
        "icon_file_path": "/opt/firefox-beta/browser/icons/mozicon128.png",
        "executable_file_path": "/opt/firefox-beta/firefox",
        "bin_path": "/usr/local/bin/firefox-beta",
        "config_path": "$HOME/.mozilla",
        "description": "Browse the World Wide Web",
        "dependencies": "alsa-lib dbus-glib ffmpeg gtk2 gtk3 hunspell icu libevent libvpx libxt mime-types mozilla-common sqlite startup-notification ttf-font libnotify (optional – notification integration) networkmanager (optional – location detection via available WiFi networks) speech-dispatcher (optional – Text-to-Speech)"
    },
    "firefox-dev": {
        "instdir": "/opt/firefox-dev",
        "download_source": "DIRECT",
        "taruri": "https://download.mozilla.org/?product=firefox-devedition-latest-ssl&os=linux64&lang=en-US",
        "apiuri": "",
        "desktop_file_path": "DOWNLOAD",
        "icon_file_path": "/opt/firefox-dev/browser/icons/mozicon128.png",
        "executable_file_path": "/opt/firefox-dev/firefox",
        "bin_path": "/usr/local/bin/firefox-dev",
        "config_path": "$HOME/.mozilla",
        "description": "Browse the World Wide Web",
        "dependencies": "alsa-lib dbus-glib ffmpeg gtk2 gtk3 hunspell icu libevent libvpx libxt mime-types mozilla-common sqlite startup-notification ttf-font libnotify (optional – notification integration) networkmanager (optional – location detection via available WiFi networks) speech-dispatcher (optional – Text-to-Speech)"
    },
    "firefox-nightly": {
        "instdir": "/opt/firefox-nightly",
        "download_source": "DIRECT",
        "taruri": "https://download.mozilla.org/?product=firefox-nightly-latest-ssl&os=linux64&lang=en-US",
        "apiuri": "",
        "desktop_file_path": "DOWNLOAD",
        "icon_file_path": "/opt/firefox-nightly/browser/icons/mozicon128.png",
        "executable_file_path": "/opt/firefox-nightly/firefox",
        "bin_path": "/usr/local/bin/firefox-nightly",
        "config_path": "$HOME/.mozilla",
        "description": "Browse the World Wide Web",
        "dependencies": "alsa-lib dbus-glib ffmpeg gtk2 gtk3 hunspell icu libevent libvpx libxt mime-types mozilla-common sqlite startup-notification ttf-font libnotify (optional – notification integration) networkmanager (optional – location detection via available WiFi networks) speech-dispatcher (optional – Text-to-Speech)"
    },
    "firefox": {
        "instdir": "/opt/firefox",
        "download_source": "DIRECT",
        "taruri": "https://download.mozilla.org/?product=firefox-55.0-SSL&os=linux64&lang=en-US",
        "apiuri": "",
        "desktop_file_path": "DOWNLOAD",
        "icon_file_path": "/opt/firefox/browser/icons/mozicon128.png",
        "executable_file_path": "/opt/firefox/firefox",
        "bin_path": "/usr/local/bin/firefox",
        "config_path": "$HOME/.mozilla",
        "description": "Browse the World Wide Web",
        "dependencies": "alsa-lib dbus-glib ffmpeg gtk2 gtk3 hunspell icu libevent libvpx libxt mime-types mozilla-common sqlite startup-notification ttf-font libnotify (optional – notification integration) networkmanager (optional – location detection via available WiFi networks) speech-dispatcher (optional – Text-to-Speech)"
    },
    "gpgpassman": {
        "instdir": "/opt/gpgpassman",
        "download_source": "GITHUB",
        "taruri": "https://github.com/simoniz0r/gpgpassman/releases",
        "apiuri": "https://api.github.com/repos/simoniz0r/gpgpassman/releases",
        "desktop_file_path": "/opt/gpgpassman/gpgpassman.desktop",
        "icon_file_path": "/opt/gpgpassman/gpgpassman.png",
        "executable_file_path": "/opt/gpgpassman/gpgpassman.sh",
        "bin_path": "/usr/local/bin/gpgpassman",
        "config_path": "$HOME/.config/gpgpassman",
        "description": "A password manager that uses gpg to encrypt and decrypt passwords. Can be ran in CLI mode or in GUI mode using zenity.",
        "dependencies": "coreutils gpg xclip git wget (optional - for gpgpassman updates) apg (optinal - for generating passwords) zenity (optional - for GUI)"
    },
    "kaku": {
        "instdir": "/opt/kaku",
        "download_source": "GITHUB",
        "taruri": "https://github.com/EragonJ/Kaku/releases",
        "apiuri": "https://api.github.com/repos/EragonJ/Kaku/releases",
        "desktop_file_path": "/opt/kaku/misc/linux/kaku.desktop",
        "icon_file_path": "/opt/kaku/logo.png",
        "executable_file_path": "/opt/kaku/kaku",
        "bin_path": "/usr/local/bin/kaku",
        "config_path": "$HOME/.config/kaku",
        "description": "Kaku is a highly integrated music player supports different online platform like YouTube, SoundCloud, Vimeo and more. Available on Mac, Windows and Linux.",
        "dependencies": "alsa-lib fuse gconf gtk2 libxss libxtst nss xdg-utils"
    },
    "kpassman": {
        "instdir": "/opt/kpassman",
        "download_source": "GITHUB",
        "taruri": "https://github.com/simoniz0r/kpassman/releases",
        "apiuri": "https://api.github.com/repos/simoniz0r/kpassman/releases",
        "desktop_file_path": "/opt/kpassman/kpassman.desktop",
        "icon_file_path": "/opt/kpassman/kpassman.png",
        "executable_file_path": "/opt/kpassman/kpassman",
        "bin_path": "/usr/local/bin/kpassman",
        "config_path": "",
        "description": "A password manager that uses gpg to encrypt and decrypt stored passwords and uses kdialog to provide a GUI.",
        "dependencies": "gpg xclip kdialog"
    },
    "nvim": {
        "instdir": "/opt/nvim",
        "download_source": "GITHUB",
        "taruri": "https://github.com/neovim/neovim/releases",
        "apiuri": "https://api.github.com/repos/neovim/neovim/releases",
        "desktop_file_path": "/opt/nvim/share/applications/nvim.desktop",
        "icon_file_path": "/opt/nvim/share/pixmaps/nvim.png",
        "executable_file_path": "/opt/nvim/bin/nvim",
        "bin_path": "/usr/local/bin/nvim",
        "config_path": "$HOME/.config/nvim",
        "description": "Vim-fork focused on extensibility and usability",
        "dependencies": "libtool libtool-bin"
    },
    "openrct2": {
        "instdir": "/opt/openrct2",
        "download_source": "GITHUB",
        "taruri": "https://github.com/OpenRCT2/OpenRCT2/releases",
        "apiuri": "https://api.github.com/repos/OpenRCT2/OpenRCT2/releases",
        "desktop_file_path": "DOWNLOAD",
        "icon_file_path": "applications-games",
        "executable_file_path": "/opt/openrct2/openrct2",
        "bin_path": "/usr/local/bin/openrct2",
        "config_path": "$HOME/.config/openrct2",
        "description": "An open source re-implementation of RollerCoaster Tycoon 2",
        "dependencies": "sdl2 sdl2-ttf (can be disabled) fontconfig (can be disabled) libzip (>= 1.0) libpng (>= 1.2) speexdsp curl (only if building with http support) jansson (>= 2.5) openssl (>= 1.0; only if building with multiplayer support) iconv zlib gl (commonly provided by Mesa or GPU vendors; can be disabled)"
    },
    "openttd": {
        "instdir": "/opt/openttd",
        "download_source": "DIRECT",
        "taruri": "https://binaries.openttd.org/releases/1.7.1/openttd-1.7.1-linux-generic-amd64.tar.gz",
        "apiuri": "",
        "desktop_file_path": "/opt/openttd/media/openttd.desktop",
        "icon_file_path": "/opt/openttd/media/openttd.128.png",
        "executable_file_path": "/opt/openttd/openttd",
        "bin_path": "/usr/local/bin/openttd",
        "config_path": "$HOME/.openttd",
        "description": "A clone of Transport Tycoon Deluxe",
        "dependencies": "icu libpng lzo sdl xz openttd-opengfx (optional - free graphics) openttd-opensfx (optional - free soundset)"
    },
    "rambox": {
        "instdir": "/opt/rambox",
        "download_source": "GITHUB",
        "taruri": "https://github.com/saenzramiro/rambox/releases",
        "apiuri": "https://api.github.com/repos/saenzramiro/rambox/releases",
        "desktop_file_path": "DOWNLOAD",
        "icon_file_path": "internet-mail",
        "executable_file_path": "/opt/rambox/rambox",
        "bin_path": "/usr/local/bin/rambox",
        "config_path": "$HOME/.config/rambox",
        "description": "Free and Open Source messaging and emailing app that combines common web applications into one.",
        "dependencies": "alsa-lib gconf gtk2 libnotify libxss libxtst nss"
    },
    "spm": {
        "instdir": "/opt/spm",
        "download_source": "GITHUB",
        "taruri": "https://github.com/simoniz0r/spm/releases",
        "apiuri": "https://api.github.com/repos/simoniz0r/spm/releases",
        "desktop_file_path": "NONE",
        "icon_file_path": "NONE",
        "executable_file_path": "/opt/spm/spm",
        "bin_path": "/usr/local/bin/spm",
        "config_path": "$HOME/.config/spm",
        "description": "spm is a simple commandline package manager that installs AppImages and precompiled tar archives.  Install this tar to be able to use spm as a command and to allow spm to upgrade itself.",
        "dependencies": "coreutils tar wget python3.x"
    },
    "todo": {
        "instdir": "/opt/todo",
        "download_source": "GITHUB",
        "taruri": "https://github.com/simoniz0r/todo/releases",
        "apiuri": "https://api.github.com/repos/simoniz0r/todo/releases",
        "desktop_file_path": "NONE",
        "icon_file_path": "NONE",
        "executable_file_path": "/opt/todo/todo.sh",
        "bin_path": "/usr/local/bin/todo",
        "config_path": "",
        "description": "todo manages todo lists in an easy to use manner. Lists are stored in ~/.todo/ListName with each item in the list stored as a separate file in that directory.",
        "dependencies": "coreutils"
    },
    "vscode": {
        "instdir": "/opt/vscode",
        "download_source": "DIRECT",
        "taruri": "https://go.microsoft.com/fwlink/?LinkID=620884",
        "apiuri": "",
        "desktop_file_path": "DOWNLOAD",
        "icon_file_path": "/opt/vscode/resources/app/resources/linux/code.png",
        "executable_file_path": "/opt/vscode/code",
        "bin_path": "/usr/local/bin/vscode",
        "config_path": "$HOME/.vscode",
        "description": "Visual Studio Code is a lightweight but powerful source code editor which runs on your desktop and is available for Windows, macOS and Linux.",
        "dependencies": "libnotify, libnss, gnupg, libxkbfile, libgconf"
    },
    "wavebox": {
        "instdir": "/opt/wavebox",
        "download_source": "GITHUB",
        "taruri": "https://github.com/wavebox/waveboxapp/releases",
        "apiuri": "https://api.github.com/repos/wavebox/waveboxapp/releases",
        "desktop_file_path": "/opt/wavebox/wavebox.desktop",
        "icon_file_path": "/opt/wavebox/icon.png",
        "executable_file_path": "/opt/wavebox/Wavebox",
        "bin_path": "/usr/local/bin/wavebox",
        "config_path": "$HOME/.config/wavebox",
        "description": "Wavebox lets you bring all your web communication tools together for faster, smarter working. Gmail, Google Inbox, Outlook, Office 365, Slack, Trello & more.",
        "dependencies": "alsa-lib gconf gtk2 libappindicator-gtk2 libxss libxtst nss (nss-hg) gvfs (optional) libnotify (optional)"
    },
    "xdgfetch": {
        "instdir": "/opt/xdgfetch",
        "download_source": "GITHUB",
        "taruri": "https://github.com/simoniz0r/xdgfetch/releases",
        "apiuri": "https://api.github.com/repos/simoniz0r/xdgfetch/releases",
        "desktop_file_path": "NONE",
        "icon_file_path": "NONE",
        "executable_file_path": "/opt/xdgfetch/xdgfetch",
        "bin_path": "/usr/local/bin/xdgfetch",
        "config_path": "",
        "description": "A bash script that lists system information.",
        "dependencies": "coreutils xdg-mime xdg-settings"
    },
    "yad-mpv": {
        "instdir": "/opt/yad-mpv",
        "download_source": "GITHUB",
        "taruri": "https://github.com/simoniz0r/yad-mpv/releases",
        "apiuri": "https://api.github.com/repos/simoniz0r/yad-mpv/releases",
        "desktop_file_path": "/opt/yad-mpv/yad-mpv.desktop",
        "icon_file_path": "/opt/yad-mpv/yad-mpv.png",
        "executable_file_path": "/opt/yad-mpv/yad-mpv",
        "bin_path": "/usr/local/bin/yad-mpv",
        "config_path": "$HOME/.config/yad-mpv",
        "description": "A simple script that launches a yad GUI for opening files or urls in mpv. Also has some useful arguments for mpv that can be easily customized.",
        "dependencies": "coreutils yad mpv"
    },
    "yad-twitch-streamlink": {
        "instdir": "/opt/yad-twitch-streamlink",
        "download_source": "GITHUB",
        "taruri": "https://github.com/simoniz0r/yad-twitch-streamlink/releases",
        "apiuri": "https://api.github.com/repos/simoniz0r/yad-twitch-streamlink/releases",
        "desktop_file_path": "/opt/yad-twitch-streamlink/yad-twitch-streamlink.desktop",
        "icon_file_path": "/opt/yad-twitch-streamlink/ytsicon.png",
        "executable_file_path": "/opt/yad-twitch-streamlink/yad-twitch-streamlink",
        "bin_path": "/usr/local/bin/yad-twitch-streamlink",
        "config_path": "$HOME/.config/yad-twitch-streamlink",
        "description": "yad-twitch-streamlink provides a list of live followed streams for playback using either streamlink or mpv. It also provides notifications for new live streams.",
        "dependencies": "coreutils yad wget streamlink (optional - for better stream playback) mpv (optional - if streamlink is not used for stream playback)"
    },
    "yadshot": {
        "instdir": "/opt/yadshot",
        "download_source": "GITHUB",
        "taruri": "https://github.com/simoniz0r/yadshot/releases",
        "apiuri": "https://api.github.com/repos/simoniz0r/yadshot/releases",
        "desktop_file_path": "/opt/yadshot/yadshot.desktop",
        "icon_file_path": "/opt/yadshot/yadshot.png",
        "executable_file_path": "/opt/yadshot/yadshot.sh",
        "bin_path": "/usr/local/bin/yadshot",
        "config_path": "$HOME/.config/yadshot",
        "description": "A bash script that uses yad to provide a GUI front end for maim/slop. Images can be copied to clipboard, uploaded to imgur, or saved.",
        "dependencies": "coreutils yad maim slop xclip curl"
    }
}
